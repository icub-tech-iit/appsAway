- name: Uninstall old versions
  hosts: nodes
  become: yes
  tasks:
    - name: Uninstall docker old versions
      apt:
        name: docker docker-engine docker.io containerd runc
        state: absent
        update_cache: false
      when: ansible_distribution != 'MacOSX'

    - name: Install packages to use a repository over HTTPS
      apt: 
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: latest
        autoclean: yes
      when: ansible_distribution != 'MacOSX'

    - name: Add Dockerâ€™s official GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
      args:
        warn: no
      when: ansible_distribution != 'MacOSX'
        
    - name: Add Docker.io repository
      shell: add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs)  stable"
      ignore_errors: yes
      when: ansible_distribution != 'MacOSX'

    - name: Install the latest version of Docker Engine - Community
      apt: 
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: latest
        autoclean: yes
      when: ansible_distribution != 'MacOSX'

    - name: Install docker plugin
      shell: docker plugin install --grant-all-permissions vieux/sshfs
      ignore_errors: yes
      when: ansible_distribution != 'MacOSX'

    - name: Install docker-compose
      shell: curl -L https://github.com/docker/compose/releases/download/1.25.0-rc2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
      args:
        warn: no
      when: ansible_distribution != 'MacOSX'
    
    - name: Install docker-compose
      shell: chmod +x /usr/local/bin/docker-compose
      args:
        warn: no
      when: ansible_distribution != 'MacOSX'

    - name: Enable docker.sock in all machines
      shell: chmod 666 /var/run/docker.sock
      args:
        warn: no
      when: ansible_distribution != 'MacOSX'

    - name: Finishing up with needed packages 
      apt: 
        name:
          - openssh-client
          - openssh-server
          - curl
          - gnupg-agent
          - software-properties-common
        state: latest
        autoclean: yes
      when: ansible_distribution != 'MacOSX'

- name: Setting up GPUs for Cuda nodes
  hosts: cuda
  become: yes
  tasks:
    - name: Setting up GPUs for Cuda nodes
      shell: GPU_ID=`nvidia-smi -a | grep UUID | awk '{print substr($3,0,12)}'` && echo "[Service]" > /etc/systemd/system/docker.service.d/docker.conf && echo "ExecStart=" >> /etc/systemd/system/docker.service.d/docker.conf && echo "ExecStart=/usr/bin/dockerd --default-runtime=nvidia --node-generic-resource gpu=${GPU_ID}" >> /etc/systemd/system/docker.service.d/docker.conf
      args:
        warn: no
      when: ansible_distribution != 'MacOSX'

    - name: Restart docker daemon after cuda configuration
      shell: systemctl daemon-reload && systemctl start docker
      args:
        warn: no
      when: ansible_distribution != 'MacOSX'
