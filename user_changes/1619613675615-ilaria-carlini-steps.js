//ilaria-carlini
//&<h3>Field changed in app: <ins>Basic Docker Deployment</ins></h3><ul><li>without_robot: {content:You just need to **download the script** on your console and run the following command in a terminal (you can use the copy cmd button for simplicity). \n`mkdir -p ~/teamcode/ && mv ~/Downloads/basicDockerDeploy_setup.txt ~/teamcode/basicDockerDeploy_setup.sh && cd ~/teamcode/ && chmod +x basicDockerDeploy_setup.sh && ./basicDockerDeploy_setup.sh && cd appsAway/demos/basicDockerDeploy && chmod +x dockerDeploy.sh && ./dockerDeploy.sh` \n**Enjoy the application!**<b>\n\n\nTEST</b>,adv:### To launch the docker image without using our script, we suggest using the following command \n`docker run --rm --name cleandocker -it --network host icubteamcode/superbuild:master_master-unstable_sources bash` \n\nUsing `--network host` allows yarp applications in the container to connect to a yarp server running outside this container. \n### To use the GUI of the applications in the docker image use the following command: \n`docker run --rm -it --network host --privileged --env DISPLAY=${DISPLAY} --env XAUTHORITY=/root/.Xauthority --mount type=bind,source=${XAUTHORITY},target=/root/.Xauthority --mount type=bind,source=/tmp/.X11-unix,target=/tmp/.X11-unix icubteamcode/superbuild:master_master-unstable_sources bash` \n\nThis command allows the docker image to use the XAuthority in your machine to show graphical interfaces! \n### If you want to use multiple containers connected to the same yarp server, you should use the following command: \n`--mount type=bind,source=${HOME}/.config/yarp,target=/root/.config/yarp`\n\nThis extra argument allows docker to mount a volume containing the yarp server configurations, which can then be read by the container. \n### If you want to run the docker image with all the options above, the final command should be the following: \n`docker run --rm -it --network host --privileged --env DISPLAY=${DISPLAY} --env XAUTHORITY=/root/.Xauthority --mount type=bind,source=${XAUTHORITY},target=/root/.Xauthority --mount type=bind,source=/tmp/.X11-unix,target=/tmp/.X11-unix --mount type=bind,source=${HOME}/.config/yarp,target=/root/.config/yarp icubteamcode/superbuild:master_master-unstable_sources bash`,cmd:mkdir -p ~/teamcode/ && mv ~/Downloads/basicDockerDeploy_setup.txt ~/teamcode/basicDockerDeploy_setup.sh && cd ~/teamcode/ && chmod +x basicDockerDeploy_setup.sh && ./basicDockerDeploy_setup.sh && cd appsAway/demos/basicDockerDeploy && chmod +x dockerDeploy.sh && ./dockerDeploy.sh}</li></ul>
db.steps.update ({_id: ObjectId("5f52487b6de3ecd4c51f19c6")},{$set: {without_robot: {"content":"You just need to **download the script** on your console and run the following command in a terminal (you can use the copy cmd button for simplicity). \n`mkdir -p ~/teamcode/ && mv ~/Downloads/basicDockerDeploy_setup.txt ~/teamcode/basicDockerDeploy_setup.sh && cd ~/teamcode/ && chmod +x basicDockerDeploy_setup.sh && ./basicDockerDeploy_setup.sh && cd appsAway/demos/basicDockerDeploy && chmod +x dockerDeploy.sh && ./dockerDeploy.sh` \n**Enjoy the application!**\n\n\nTEST","adv":"### To launch the docker image without using our script, we suggest using the following command \n`docker run --rm --name cleandocker -it --network host icubteamcode/superbuild:master_master-unstable_sources bash` \n\nUsing `--network host` allows yarp applications in the container to connect to a yarp server running outside this container. \n### To use the GUI of the applications in the docker image use the following command: \n`docker run --rm -it --network host --privileged --env DISPLAY=${DISPLAY} --env XAUTHORITY=/root/.Xauthority --mount type=bind,source=${XAUTHORITY},target=/root/.Xauthority --mount type=bind,source=/tmp/.X11-unix,target=/tmp/.X11-unix icubteamcode/superbuild:master_master-unstable_sources bash` \n\nThis command allows the docker image to use the XAuthority in your machine to show graphical interfaces! \n### If you want to use multiple containers connected to the same yarp server, you should use the following command: \n`--mount type=bind,source=${HOME}/.config/yarp,target=/root/.config/yarp`\n\nThis extra argument allows docker to mount a volume containing the yarp server configurations, which can then be read by the container. \n### If you want to run the docker image with all the options above, the final command should be the following: \n`docker run --rm -it --network host --privileged --env DISPLAY=${DISPLAY} --env XAUTHORITY=/root/.Xauthority --mount type=bind,source=${XAUTHORITY},target=/root/.Xauthority --mount type=bind,source=/tmp/.X11-unix,target=/tmp/.X11-unix --mount type=bind,source=${HOME}/.config/yarp,target=/root/.config/yarp icubteamcode/superbuild:master_master-unstable_sources bash`","cmd":"mkdir -p ~/teamcode/ && mv ~/Downloads/basicDockerDeploy_setup.txt ~/teamcode/basicDockerDeploy_setup.sh && cd ~/teamcode/ && chmod +x basicDockerDeploy_setup.sh && ./basicDockerDeploy_setup.sh && cd appsAway/demos/basicDockerDeploy && chmod +x dockerDeploy.sh && ./dockerDeploy.sh"}}});
