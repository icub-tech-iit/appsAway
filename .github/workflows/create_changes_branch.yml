name: Creating changes branch

on: 
    repository_dispatch:
        types: [user_changes]

jobs:
  update_code:
    runs-on: ubuntu-latest
    steps: 
    
      - name: Get Token
        id: get_workflow_token
        uses: tibdex/github-app-token@v1
        with:
            private_key: ${{ secrets.ICUB_TECH_CODE_APP_KEY }}
            app_id: ${{ secrets.ICUB_TECH_CODE_APP_ID }}
            repository: icub-tech-iit/code
        
      # we checkout appsAway code
      - uses: actions/checkout@v2
        env:
            GITHUB_APPS_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        with:
          repository: icub-tech-iit/code
          token: ${{ env.GITHUB_APPS_TOKEN }}
          path: code
          ref: ${{ github.event.client_payload.branch_name }}
            
      - name: check working directory
        run: |
            ls
            pwd
            
      - name: copies user_changes to temporary folder
        run: |
            cd code
            mkdir -p ../test/
            mv -v ./icub-tech-apps/dist/express/evaluate/*.* ../test/ 2>/dev/null || :

      - uses: actions/checkout@v2
        with:
          path: appsAway
          
      - name: check working directory
        run: |
            ls -la
            pwd

      - name: copies user_changes folder
        run: |
            mkdir -p ./appsAway/user_changes/
            mv -v ./test/* ./appsAway/user_changes/
            ls -la ../

      - name: clean working directory
        run: |
            pwd
            ls
            rm -rf code
            ls
    
      - name: get file data
        id: get_filedata
        run: |
              pwd
              ls
              cd appsAway/user_changes
              file_list=$(ls -p | grep -v / )
              len_list=${#file_list[@]}
              iter=0
              for file in $file_list
              do
                if [ $iter != 0 ];
                then
                  user_list="$user_list,"
                  exported_img_list="$exported_img_list "
                  changes_list="$changes_list<br/>"
                fi
                user_list="$user_list$(head -1 $file | awk -F'//' '{print $2}')"
                exported_img_list="$exported_img_list$(head -2 $file | tail -1 | awk -F'//' '{print $2}')"
                changes_list="$changes_list$(tail -n +1 $file | awk -F'//&' '{print $2}')"
              iter=$((iter+1))
              done
              echo $user_list
              exported_img_list=($exported_img_list)
              echo ${exported_img_list[@]}
              echo $changes_list
              echo "user_list=$user_list" >> $GITHUB_OUTPUT
              echo "changes_list=$changes_list" >> $GITHUB_OUTPUT
              echo "exported_img_list=${exported_img_list[@]}" >> $GITHUB_OUTPUT
            
      - name: pull-request
        id: open-pr
        uses: peter-evans/create-pull-request@v3
        with:
            path: appsAway
            branch: ${{ github.event.client_payload.branch_name }}
            title: "Adding user changes into the website."
            body: ${{ steps.get_filedata.outputs.changes_list }}
            assignees: ${{ steps.get_filedata.outputs.user_list }}
            reviewers: "AlexAntn,vtikha"
        
      - name: Check outputs
        run: |
          echo "Pull Request Number - ${{ steps.open-pr.outputs.pull-request-number }}"
          echo "Pull Request URL - ${{ steps.open-pr.outputs.pull-request-url }}"
              
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: add metadata to bucket
        run: |
          for img in ${{ steps.get_filedata.outputs.exported_img_list }}
          do
            gsutil setmeta -h "x-goog-meta-pr-number: ${{steps.open-pr.outputs.pr_number}}" gs://$img
          done
