# this workflow will generate the containers on push. These containers are for test only, so ideally they should be uploaded to a private repo, not available to the public. tag=superbuild_devel (?)
# for the stable versions, use superbuild_builder_stable.yml, triggered on release

name: SB_onCodeChanges

on: 
    repository_dispatch:
        types: [SB_onCodeChanges,SB_onSBRelease]

jobs:
    job_1:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  repository: icub-tech-iit/code
                  token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}
            - name: Login to DockerHub Registry
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

##################### Command to set the tag for the date argument ######################
            - name: set date argument for Docker build
              run: |
                echo "$(date +'%d/%m/%Y')" > DATE_
                echo "metadata=$(cat DATE_)" > DATE_TAG
                echo $(cat DATE_TAG)
#########################################################################################

#########################################################################################
################### THIS IS THE IMPLEMENTATION WITH UNSTABLE VERSION ####################
#########################################################################################

########### This command sets the stable/unstable variable ##############################
            - name: set stable/unstable argument for Docker build
              run: |
                echo "Unstable" > SBTAG
                echo "sbtag=$(cat SBTAG)" > SBTAG_ARG
                echo $(cat SBTAG_ARG)
#########################################################################################

########### This command sets the master/release variable ##############################
            - name: set release/master argument for Docker build
              run: |
                echo ${{ github.event.client_payload.version }} > RELEASE_TAG
                echo "release=$(cat RELEASE_TAG)" > RELEASE_ARG
                echo $(cat RELEASE_ARG)
#########################################################################################

######## Command to build the full Docker image, using only unstable tag #########
            - name: Build superbuild Docker unstable full image
              run: docker build --build-arg ${{ github.event.client_payload.base_image_for_SB_src }} --build-arg $(cat DATE_TAG) --build-arg $(cat SBTAG_ARG) --build-arg $(cat RELEASE_ARG) ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile --tag ${{ github.event.client_payload.superbuild_unst_src }}
#########################################################################################

######### Command to push the full unstable Docker Image online ##################################
            - name: Push superbuild Docker unstable full image
              run: docker push ${{ github.event.client_payload.superbuild_unst_src }}
#########################################################################################

######## Command to build the thin Docker image, using only unstable tag #########
            - name: Build superbuild Docker unstable thin image
              run: docker build  --build-arg ${{ github.event.client_payload.unst_base_image_for_SB_bin }} --build-arg ${{ github.event.client_payload.base_image_for_SB_src }} ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile4Production --tag ${{ github.event.client_payload.superbuild_unst_bin }}
#########################################################################################

######### Command to push the thin unstable Docker Image online ##################################
            - name: Push superbuild Docker unstable thin image
              run: docker push ${{ github.event.client_payload.superbuild_unst_bin }}
#########################################################################################

    job_2:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  repository: icub-tech-iit/code
                  token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}
            - name: Login to DockerHub Registry
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

##################### Command to set the tag for the date argument ######################
            - name: set date argument for Docker build
              run: |
                echo "$(date +'%d/%m/%Y')" > DATE_
                echo "metadata=$(cat DATE_)" > DATE_TAG
                echo $(cat DATE_TAG)
#########################################################################################

#########################################################################################
##################### THIS IS THE IMPLEMENTATION WITH STABLE VERSION ####################
#########################################################################################

########### This command sets the master/release variable ##############################
            - name: set release/master argument for Docker build
              run: |
                echo ${{ github.event.client_payload.version }} > RELEASE_TAG
                echo "release=$(cat RELEASE_TAG)" > RELEASE_ARG
                echo $(cat RELEASE_ARG)
#########################################################################################

######## Command to build the full Docker image, using only stable tag #########
            - name: Build superbuild Docker stable full image
              run: docker build --build-arg ${{ github.event.client_payload.base_image_for_SB_src }} --build-arg $(cat DATE_TAG) --build-arg $(cat RELEASE_ARG) ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile --tag ${{ github.event.client_payload.superbuild_stab_src }}
#########################################################################################

######### Command to push the full stable Docker Image online ##################################
            - name: Push superbuild Docker stable full image
              run: docker push ${{ github.event.client_payload.superbuild_stab_src }}
#########################################################################################

######## Command to build the thin Docker image, using only stable tag #########
            - name: Build superbuild Docker stable thin image
              run: docker build  --build-arg ${{ github.event.client_payload.stab_base_image_for_SB_bin }} --build-arg ${{ github.event.client_payload.base_image_for_SB_src }} ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile4Production --tag ${{ github.event.client_payload.superbuild_stab_bin }}
#########################################################################################

######### Command to push the thin stable Docker Image online ##################################
            - name: Push superbuild Docker stable thin image
              run: docker push ${{ github.event.client_payload.superbuild_stab_bin }}
#########################################################################################


