# this workflow will generate the containers on code release of googleSpeech.

name: G_S_onCodeRelease

on: 
    repository_dispatch:
        types: [G_S_onCodeRelease]


jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  repository: icub-tech-iit/code
                  token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}

            - name: Login to DockerHub Registry
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

############## build the unstable full version of googleSpeech ##############
            - name: Build googleSpeech Docker full image
              run: docker build --build-arg ${{ github.event.client_payload.ase_image_for_G_S_src}} ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile --tag ${{ github.event.client_payload.speech_src}}
            - name: Push googleSpeech Docker full image
              run: docker push ${{ github.event.client_payload.speech_src }}
              
#########################################################################################

############## build the unstable thin version of googleSpeech ##############
            - name: Build googleSpeech Docker thin image
              run: docker build --build-arg ${{ github.event.client_payload.base_image_for_G_S_bin }} --build-arg ${{ github.event.client_payload.sb_base_image_for_G_S_bin }} ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile4Production --tag ${{ github.event.client_payload.speech_bin}}
            - name: Push googleSpeech Docker thin image
              run: docker push ${{ github.event.client_payload.speech_bin }}

