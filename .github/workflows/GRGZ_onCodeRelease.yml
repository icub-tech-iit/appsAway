# this workflow will generate the containers on push. These containers are for test only, so ideally they should be uploaded to a private repo, not available to the public. tag=graspgazebo_devel (?)
# for the stable versions, use graspgazebo_builder_stable.yml, triggered on release

name: GRGZ_onCodeRelease

on: 
    repository_dispatch:
        types: [GRGZ_onCodeRelease]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                  repository: icub-tech-iit/code
                  token: ${{ secrets.CODE_REPO_ACCSS_TOKEN }}
            - name: Login to DockerHub Registry
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

##################### Command to set the tag for the date argument ######################
            - name: set date argument for Docker build
              run: |
                echo "$(date +'%d/%m/%Y')" > DATE_
                echo "metadata=$(cat DATE_)" > DATE_TAG
                echo $(cat DATE_TAG)
#########################################################################################

#########################################################################################
################ THIS IS THE IMPLEMENTATION WITH STABLE/UNSTABLE VERSION ################
#########################################################################################

########### This command sets the stable/unstable variable ##############################
            - name: set stable/unstable argument for Docker build
              run: |
                echo "Unstable" > SBTAG
                echo "sbtag=$(cat SBTAG)" > SBTAG_ARG
                echo $(cat SBTAG_ARG)
#########################################################################################

########### This command sets the master/release variable ##############################
            - name: set release/master argument for Docker build
              run: |
                echo "master" > RELEASE_TAG
                echo "release=$(cat RELEASE_TAG)" > RELEASE_ARG
                echo $(cat RELEASE_ARG)
#########################################################################################

######## Command to build the full Docker image#########
            - name: Build graspgazebo Docker full image
              run: docker build --build-arg ${{ github.event.client_payload.base_image_for_SB_src}} --build-arg $(cat DATE_TAG) --build-arg $(cat RELEASE_ARG) ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile --tag ${{ github.event.client_payload.graspgazebo_src }}
#########################################################################################

######### Command to push the full Docker Image online ##################################
            - name: Push graspgazebo Docker full image
              run: docker push ${{ github.event.client_payload.graspgazebo_src }}
#########################################################################################

######## Command to build the thin Docker image #########
            - name: Build graspgazebo Docker thin image
              run: docker build  --build-arg ${{ github.event.client_payload.base_image_for_SB_bin}} --build-arg ${{ github.event.client_payload.base_image_for_SB_src}} ${{ github.event.client_payload.docker_path }} --file ${{ github.event.client_payload.docker_path }}/Dockerfile4Production --tag ${{ github.event.client_payload.graspgazebo_bin}}
#########################################################################################

######### Command to push the thin Docker Image online ##################################
            - name: Push graspgazebo Docker thin image
              run: docker push ${{ github.event.client_payload.graspgazebo_bin}}
#########################################################################################


