# this workflow will generate the containers on push. These containers are for test only, so ideally they should be uploaded to a private repo, not available to the public. tag=ubuntu1804mesa_devel (?)
# for the stable versions, use ubuntu1804mesa_builder_stable.yml, triggered on release

name: Ubuntu_build_latest

on: 
    push:
        paths:
            - 'dockerfile_images/basic/ubuntu1804mesa/**' # trigger if there are changes to the demo itself
            - '.github/workflows/ubuntu1804mesa_builder_devel.yml'
            #- '!no_change_folder/**' # this can be used to ignore subfolders of the ones mentioned above

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - name: Get the version
              id: get_version
              run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
            - name: Login to DockerHub Registry
              run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

            - name: Build ubuntu1804mesa Docker image
              run: docker build ./dockerfile_images/basic/ubuntu1804mesa --file ./dockerfile_images/basic/ubuntu1804mesa/Dockerfile --tag icubteamcode/ubuntu1804mesa:latest
            - name: Push ubuntu1804mesa Docker image
              run: docker push icubteamcode/ubuntu1804mesa:latest

#################### Build the superbuild ###################

            - name: Build superbuild Docker full image
              run: docker build  ./dockerfile_images/basic/superbuild --file ./dockerfile_images/basic/superbuild/Dockerfile --tag icubteamcode/superbuild:devel_full
            - name: Push superbuild Docker full image
              run: docker push icubteamcode/superbuild:devel_full
#
            - name: Build superbuild Docker thin image
              run: docker build  ./dockerfile_images/basic/superbuild --file ./dockerfile_images/basic/superbuild/Dockerfile4Production --tag icubteamcode/superbuild:devel_prod
            - name: Push superbuild Docker thin image
              run: docker push icubteamcode/superbuild:devel_prod

#################### Build the superbuild-icubhead ####################

            - name: Build superbuild-icubhead Docker full image
              run: docker build ./dockerfile_images/basic/superbuild-icubhead --file ./dockerfile_images/basic/superbuild-icubhead/Dockerfile --tag icubteamcode/superbuild-icubhead:devel_full
            - name: Push superbuild-icubhead Docker full image
              run: docker push icubteamcode/superbuild-icubhead:devel_full
#
            - name: Build superbuild-icubhead Docker thin image
              run: docker build ./dockerfile_images/basic/superbuild-icubhead --file ./dockerfile_images/basic/superbuild-icubhead/Dockerfile4Production --tag icubteamcode/superbuild-icubhead:devel_prod
            - name: Push superbuild-icubhead Docker thin image
              run: docker push icubteamcode/superbuild-icubhead:devel_prod

#################### Build the demos #######################

#            - name: Build graspTheBall Docker image
#              run: docker build  ./dockerfile_images/demos/graspTheBall --file ./dockerfile_images/demos/graspTheBall/Dockerfile --tag icubteamcode/grasptheball:devel_full
#            - name: Push graspTheBall Docker image
#              run: docker push icubteamcode/grasptheball:devel_full
#
            - name: Build graspTheBall Docker thin image
              run: docker build ./dockerfile_images/demos/graspTheBall --file ./dockerfile_images/demos/graspTheBall/Dockerfile4Production --tag icubteamcode/grasptheball:devel_prod
            - name: Push graspTheBall Docker thin image
              run: docker push icubteamcode/grasptheball:devel_prod
