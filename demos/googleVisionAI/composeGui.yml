version: "3.7"

x-yarp-base: &yarp-base
  image: icubteamcode/google-vision:v2021.08.1-stable_master_sources
  environment:
    - DISPLAY=${DISPLAY}
    - XAUTHORITY=/root/.Xauthority
    - YARP_FORWARD_LOG_ENABLE=1
    - YARP_ROBOT_NAME
    - FILE_INPUT=${KEY_FILE}
  volumes:
    - "/tmp/.X11-unix:/tmp/.X11-unix"
    - "${XAUTHORITY}:/root/.Xauthority"
    - "${HOME}/${YARP_CONF_PATH}:/root/.config/yarp"
    - "${HOME}/${APPSAWAY_APP_PATH_NOT_CONSOLE}/key_folder:/root/authorization"
    - "/dev:/dev"
  network_mode: "host"
  privileged: true
  #ipc: host

#docker run -it --network host --privileged --device /dev/snd -e PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native -v ${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native -v ~/.config/pulse/cookie:/root/.config/pulse/cookie --group-add $(getent group audio | cut -d: -f3) --env DISPLAY=${DISPLAY} --env XAUTHORITY=/root/.Xauthority --env FILE_INPUT=dialogflow-test-293012-3ba67bcfcff3.json --mount type=bind,source=/home/alexandre/Downloads,target=/root/authorization --mount type=bind,source=${XAUTHORITY},target=/root/.Xauthority --mount type=bind,source=/tmp/.X11-unix,target=/tmp/.X11-unix --mount type=bind,source=${HOME}/.config/yarp,target=/root/.config/yarp icubteamcode/speech:master_master-unstable_sources


services:
#following service are configured in icub-main/app/iCubStartup/scripts/iCubStartup.xml.template

  yGrabberCameras:
    <<: *yarp-base
    devices:
      - "/dev/video0:/dev/video0"
    command: sh -c "if [ -z ${CUSTOM_PORT} ]; then if [ -f "/root/.config/yarp/yarp_namespace.conf" ]; then yarp wait $$(echo $$(cat /root/.config/yarp/yarp_namespace.conf)); else yarp wait /root; fi; yarpdev --from camera/ServerGrabberDualDragon.ini --split true; fi"

#------------------------------------------------------------------------------------------------
  #Here we open the viewer to see the output image
  yview_image_o:
    <<: *yarp-base
    command: sh -c "yarp wait /googleVisionAI/image:o; yarpview --name /outImage"

  #Here we open the viewer to see icub view
  yview_icub_l:
    <<: *yarp-base
    command: sh -c "if [ -z ${CUSTOM_PORT} ]; then if [ -f "/root/.config/yarp/yarp_namespace.conf" ]; then yarp wait $$(echo $$(cat /root/.config/yarp/yarp_namespace.conf)); else yarp wait /root; fi; yarpview --name  /icub/view/left; fi"


  #Here we open the viewer to see the input of the custom port
  yview_port_image_i:
    <<: *yarp-base
    command: sh -c "if [ ! -z ${CUSTOM_PORT} ]; then if [ -f "/root/.config/yarp/yarp_namespace.conf" ]; then yarp wait $$(echo $$(cat /root/.config/yarp/yarp_namespace.conf)); else yarp wait /root; fi; yarpview --name /startImage; fi"











