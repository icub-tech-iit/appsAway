version: "3.7"

x-yarp-base: &yarp-base
  image: icubteamcode/grasp-gazebo:master_sources
  environment:
    - DISPLAY=${DISPLAY}
    - QT_X11_NO_MITSHM=1
    - XAUTHORITY=/root/.Xauthority
    - YARP_FORWARD_LOG_ENABLE=1
    - YARP_ROBOT_NAME
    - ICUBcontrib_DIR=/workspace/iCubContrib
  volumes:
    - "/tmp/.X11-unix:/tmp/.X11-unix"
    - "${XAUTHORITY}:/root/.Xauthority"
    - "${HOME}/${YARP_CONF_PATH}:/root/.config/yarp"
    - "/usr/local/cuda/lib64:/usr/lib/nvidia"
    - "/usr/local/cuda:/usr/local/cuda"
    - "/usr/lib/x86_64-linux-gnu:/usr/lib/projects/x86_64-linux-gnu"
    - "/usr/bin:/usr/projects/bin"
    - "/dev/dri:/dev/dri"
  ports:
    - "10000:10000"
  network_mode: "host"
  privileged: true
  #ipc: host


services:

# yarp manager handles all the connections, so we don't need to create services for each of them  echo 'before'
#  ymanager:
#    <<: *yarp-base
#    command: sh -c "yarp wait /icubSim/torso/state:o ; yarp wait /icubSim/head/state:o ; yarp wait /icubSim/left_arm/state:o ; yarp wait /icubSim/right_arm/state:o ; yarp wait /icubSim/cam/left/rgbImage:o ; yarp wait /icub-grasp/world/eraser:o ; yarp wait /world/model-eraser/model-name:i; yarp wait /iKinGazeCtrl/rpc; yarp wait /view/left ; yarpmanager-console --application /workspace/iCubContrib/share/ICUBcontrib/applications/icub-grasp.xml --connect --exit "

  gazebo:
    <<: *yarp-base
    command: sh -c "if [ -f "/root/.config/yarp/yarp_namespace.conf" ]; then yarp wait $$(echo $$(cat /root/.config/yarp/yarp_namespace.conf)); else yarp wait /root; fi; gazebo -e dart /workspace/iCubContrib/share/gazebo/worlds/icub-gazebo-grasping-sandbox.sdf"

  find-superquadric:
    <<: *yarp-base
    command: sh -c "yarp wait /view/left; find-superquadric --remove-outliers '(0.01 10)' --random-sample 0.2 --disable-viewer"

  yview:
    <<: *yarp-base
    command: sh -c "yarp wait /icubSim/cam/left/rgbImage:o; yarpview --name /view/left --compact --p 10 --x 20 --y 20"

  icub-gazebo-grasping-sandbox:
    <<: *yarp-base
    command: sh -c "yarp wait /iKinGazeCtrl/rpc; yarp wait /icubSim/cartesianController/right_arm/state:o; yarp wait /icubSim/cartesianController/left_arm/state:o; icub-gazebo-grasping-sandbox"

#  icub-gazebo-grasping-sandbox:
#    <<: *yarp-base
#    depends_on:
#      - yrobotinterface
#    command: sh -c "yarp wait /icubSim/torso/state:o ; yarp wait /icubSim/left_arm/state:o ; yarp wait /icubSim/right_arm/state:o ; ( yarprobotinterface --context gazeboCartesianControl --config no_legs.xml & ) ; checkRobotInterface --robot icubSim ; yarp wait /icubSim/torso/state:o ; yarp wait /icubSim/right_arm/state:o ; ( iKinCartesianSolver --context gazeboCartesianControl --part right_arm & ) ; yarp wait /icubSim/torso/state:o ; yarp wait /icubSim/left_arm/state:o ; ( iKinCartesianSolver --context gazeboCartesianControl --part left_arm & ) ; yarp wait /icubSim/torso/state:o ; yarp wait /icubSim/head/state:o ; yarp wait /icubSim/inertial ; (iKinGazeCtrl --context gazeboCartesianControl --from iKinGazeCtrl.ini &) ; yarp wait /iKinGazeCtrl/rpc; yarp wait /icubSim/cartesianController/right_arm/state:o; yarp wait /icubSim/cartesianController/left_arm/state:o; sleep 20; icub-gazebo-grasping-sandbox"

#  yDemo:
#    <<: *yarp-base
#    command: /workspace/iCubContrib/bin/icub-grasp.sh

