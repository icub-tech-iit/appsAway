version: "3.7"

x-yarp-base: &yarp-base
  image: icubteamcode/speech:v2021.08.1-stable_master_sources
  environment:
    - DISPLAY=${DISPLAY}
    - QT_X11_NO_MITSHM=1
    - XAUTHORITY=/root/.Xauthority
    - YARP_FORWARD_LOG_ENABLE=1
    - YARP_ROBOT_NAME
    - FILE_INPUT
    - PULSE_SERVER=unix:${XDG_RUNTIME_DIR}/pulse/native
    - XDG_RUNTIME_DIR
  volumes:
    - "/tmp/.X11-unix:/tmp/.X11-unix"
    - "${XAUTHORITY}:/root/.Xauthority"
    - "${HOME}/${YARP_CONF_PATH}:/root/.config/yarp"
    - "${FILE_INPUT_PATH}:/root/authorization"
    - "${XDG_RUNTIME_DIR}/pulse/native:${XDG_RUNTIME_DIR}/pulse/native"
    - "~/.config/pulse/cookie:/root/.config/pulse/cookie"
    - "/dev:/dev"
  ports:
    - "10000:10000"
  network_mode: "host"
  privileged: true
  #ipc: host

services:
#following service are configured in icub-main/app/iCubStartup/scripts/iCubStartup.xml.template
  yMicrophone:
    <<: *yarp-base
    devices: 
      - "/dev/snd:/dev/snd"
    command: sh -c "if [ -f "/root/.config/yarp/yarp_namespace.conf" ]; then yarp wait $$(echo $$(cat /root/.config/yarp/yarp_namespace.conf)); else yarp wait /root; fi; yarpdev --device AudioRecorderWrapper --from /root/startaudio.ini --channels 1  --rate 16000 --samples 16000"
  
  yconnect_audio:
    <<: *yarp-base
    depends_on:
      - yMicrophone
    command: sh -c "yarp wait /microphone/audio:o; yarp wait /googleSpeech/sound:i; yarp connect /microphone/audio:o /googleSpeech/sound:i tcp"

  yconnect_rpc:
    <<: *yarp-base
    depends_on:
      - yMicrophone
    command: sh -c "yarp wait /microphone/rpc; yarp wait /googleSpeech/commands:rpc; yarp connect /googleSpeech/commands:rpc /microphone/rpc tcp"







