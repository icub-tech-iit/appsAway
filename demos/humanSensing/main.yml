version: "3.7"

x-yarp-base: &yarp-base
  image: icubteamcode/human-sensing:master-unstable_sources
  environment:
    - YARP_FORWARD_LOG_ENABLE=1
  volumes:
    - type: volume
      source: yarp-config
      target: /root/.config/yarp
      volume:
        nocopy: true
  networks:
    - hostnet




#note: following services that need yarpRobotinterface is running, I write yarp wait /yarpRobotInterface;
#just to remember us to solve thi issue. Such yarp port doesn't exist.

services:
#following service are configured in icub-main/app/iCubStartup/scripts/iCubStartup.xml.template
  yserver:
    <<: *yarp-base
    deploy:
      placement:
        constraints: [node.role == manager]
    command: yarpserver --write
  

 

#------------------------------------------------------------------------------------------------
#Following services are configured in ./icub-main/app/default/scripts/cameras_calib.xml.template


  yCamCalib_l:
    <<: *yarp-base
    deploy:
      placement:
        constraints: [node.labels.type != head]
    command: sh -c "if ! set|grep '^CUSTOM_PORT=' >/dev/null; then camCalib --context cameraCalibration --from icubEyes.ini --group CAMERA_CALIBRATION_LEFT --name /icub/camcalib/left; fi"

  yCamCalib_r:
    <<: *yarp-base
    deploy:
      placement:
        constraints: [node.labels.type != head]
    command: sh -c "if ! set|grep '^CUSTOM_PORT=' >/dev/null; then camCalib --context cameraCalibration --from icubEyes.ini --group CAMERA_CALIBRATION_RIGHT --name /icub/camcalib/right; fi"

  yConnectCam_l:
    <<: *yarp-base
    deploy:
      placement:
        constraints: [node.labels.type != head]
      restart-policy:
        condition: on-failure
    command: sh -c "if ! set|grep '^CUSTOM_PORT=' >/dev/null; then yarp wait /icub/cam/left; yarp wait /icub/camcalib/left/in; yarp connect /icub/cam/left /icub/camcalib/left/in udp; fi"

  yConnectCam_r:
    <<: *yarp-base
    deploy:
      placement:
        constraints: [node.labels.type != head]
      restart-policy:
        condition: on-failure
    command: sh -c "if ! set|grep '^CUSTOM_PORT=' >/dev/null; then yarp wait /icub/cam/right; yarp wait /icub/camcalib/right/in; yarp connect /icub/cam/right /icub/camcalib/right/in udp; fi"


#------------------------------------------------------------------------------------------------

  yDemofaceLandmarks:
    <<: *yarp-base
    deploy:
      placement:
        constraints: [node.labels.type != head]
    command: sh -c "faceLandmarks"

  yConnectCamToFL_l:
    <<: *yarp-base
    deploy:
      placement:
        constraints: [node.labels.type != head]
      restart-policy:
        condition: on-failure
    command: sh -c "if set|grep '^CUSTOM_PORT=' >/dev/null; then yarp wait $CUSTOM_PORT ; yarp wait /faceLandmarks/image:i ; yarp connect $CUSTOM_PORT /faceLandmarks/image:i tcp ; else yarp wait /icub/camcalib/left/out; yarp wait /faceLandmarks/image:i ; yarp connect /icub/camcalib/left/out /faceLandmarks/image:i tcp; fi"

#------------------------------------------------------------------------------------------------

  #use network.peer ip address and port 8080 to see the containers status in browser
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]


networks:
  hostnet:
    external: true
    name: host

volumes:
  yarp-config:
    driver: vieux/sshfs
    driver_opts:
      sshcmd: ${USER_NAME}@${MASTER_ADDR}:${YARP_CONF_PATH}
      password: ${USER_PASSWORD}
      allow_other: ""
